name: Pull Request Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v3.4.0
        with:
          go-version: 1.16
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2.4.0
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.8.1
        with:
          version: latest
          args: release --skip-publish --rm-dist
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.2.1
        if: github.event_name == 'pull_request'
        with:
          image-ref: 'ghcr.io/kubesphere-sigs/ks-releaser:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Push image
        if: github.ref == 'refs/heads/master'
        run: |
          docker login ghcr.io --username linuxsuren --password ${{secrets.GH_PUBLISH_SECRETS}}
          docker tag ghcr.io/kubesphere-sigs/ks-releaser:latest ghcr.io/kubesphere-sigs/ks-releaser:master
          docker push ghcr.io/kubesphere-sigs/ks-releaser:master

  UnitTest:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v3.4.0
        with:
          go-version: 1.16
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2.4.0
      - name: Test
        run: |
          go test ./... -coverprofile coverage.out
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
